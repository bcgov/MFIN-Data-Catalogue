<?php

/**
 * @file
 * Theme file.
 */

use Drupal\Core\Link;

/**
 * Implements hook_preprocess_HOOK() for block--facets-summary-block.html.twig.
 */
function dc_theme_preprocess_block__facets_summary_block(array &$variables): void {
  // Hide search facet summary block label when the block is empty.
  if (empty($variables['content']['#items'])) {
    $variables['label'] = NULL;
  }
}

/**
 * Implements hook_preprocess_HOOK() for block--search-api-saved-searches.html.twig.
 */
function dc_theme_preprocess_block__search_api_saved_searches(array &$variables): void {
  $variables['attributes']['class'][] = 'card';
  $variables['attributes']['class'][] = 'text-bg-light';
  $variables['attributes']['class'][] = 'p-1';
  $variables['attributes']['class'][] = 'p-md-3';
  $variables['attributes']['class'][] = 'mb-3';

  $variables['title_attributes']['class'][] = 'panel-title';
  $variables['title_attributes']['class'][] = 'h6';
  $variables['title_attributes']['class'][] = 'icon-bi-bookmark-plus';
}

/**
 * Implements hook_preprocess_HOOK() for input--submit.html.twig.
 */
function dc_theme_preprocess_input__submit(array &$variables): void {
  // Add button--danger class to reset buttons.
  if ($variables['element']['#id'] === 'edit-reset') {
    $variables['attributes']['class'][] = 'button--danger';
  }
}

/**
 * Implements hook_preprocess_HOOK() for node--data-set--full.html.twig.
 */
function dc_theme_preprocess_node__data_set__full(array &$variables): void {
  // Make author name available in the template.
  //
  // Author of this node.
  $author = $variables['node']->getOwner();

  // If the search page route exists, make the author name be a link to it.
  if (\Drupal::service('router.route_provider')->getRoutesByNames(['page_manager.page_view_site_search_site_search-panels_variant-0'])) {
    // Query string for searching for the author as a facet.
    $options = [
      'query' => [
        'f' => [
          'author_id:' . $author->id(),
        ],
      ],
    ];
    $variables['author_link'] = Link::createFromRoute($author->getDisplayName(), 'page_manager.page_view_site_search_site_search-panels_variant-0', [], $options);
  }
  else {
    $variables['author_link'] = $author->getDisplayName();
  }

  // Display version of field_information_schedule.
  $information_schedule_term = $variables['elements']['field_information_schedule'][0]['#entity'] ?? NULL;
  if ($information_schedule_term) {
    $parents = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadAllParents($information_schedule_term->id());

    $information_schedule_root_term = array_pop($parents);
    $variables['information_schedule_type'] = $information_schedule_root_term->label();

    $name_parts = [];
    foreach ($parents as $term) {
      if ($term->field_schedule_number->value) {
        array_unshift($name_parts, $term->label());
      }
    }
    $variables['information_schedule_details'] = implode(': ', $name_parts);
  }

  // Data dictionary download links.
  $variables['data_dictionary_download_links'] = bc_dc_get_data_dictionary_download_links($variables['node']);
}

/**
 * Implements hook_preprocess_HOOK() for node--data-set-build-page.html.twig.
 */
function dc_theme_preprocess_node__data_set_build_page(array &$variables): void {
  $variables['attributes']['class'][] = 'dc-data-set-build-page';
  $variables['page'] = TRUE;
}

/**
 * Implements hook_preprocess_HOOK() for node--data-set-columns.html.twig.
 */
function dc_theme_preprocess_node__data_set_columns(array &$variables): void {
  $variables['page'] = TRUE;
}

/**
 * Implements hook_preprocess_HOOK() for page--node--add-columns.html.twig.
 */
function dc_theme_preprocess_page__node__add_columns(array &$variables): void {
  $variables['b5_top_container'] = 'container-fluid';
}

/**
 * Implements hook_preprocess_HOOK() for views-view-field.html.twig.
 */
function dc_theme_preprocess_views_view_fields(array &$variables): void {
  // For 'nothing' fields, remove the wrapper element if it is a 'div' or 'span'
  // with no attributes.
  $element_names = [
    'div',
    'span',
  ];
  if (isset($variables['fields']['nothing']) && in_array($variables['fields']['nothing']?->element_type, $element_names, TRUE) && empty($variables['fields']['nothing']->element_attributes->storage())) {
    $variables['fields']['nothing']->element_type = NULL;
  }
}
